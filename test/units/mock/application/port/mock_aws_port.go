// Code generated by MockGen. DO NOT EDIT.
// Source: application/port/aws_port.go

// Package mock_port is a generated GoMock package.
package mock_port

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAWSPort is a mock of AWSPort interface.
type MockAWSPort struct {
	ctrl     *gomock.Controller
	recorder *MockAWSPortMockRecorder
}

// MockAWSPortMockRecorder is the mock recorder for MockAWSPort.
type MockAWSPortMockRecorder struct {
	mock *MockAWSPort
}

// NewMockAWSPort creates a new mock instance.
func NewMockAWSPort(ctrl *gomock.Controller) *MockAWSPort {
	mock := &MockAWSPort{ctrl: ctrl}
	mock.recorder = &MockAWSPortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAWSPort) EXPECT() *MockAWSPortMockRecorder {
	return m.recorder
}

// CreatePreSignedURL mocks base method.
func (m *MockAWSPort) CreatePreSignedURL(bucket string, storageKey int) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePreSignedURL", bucket, storageKey)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePreSignedURL indicates an expected call of CreatePreSignedURL.
func (mr *MockAWSPortMockRecorder) CreatePreSignedURL(bucket, storageKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePreSignedURL", reflect.TypeOf((*MockAWSPort)(nil).CreatePreSignedURL), bucket, storageKey)
}
